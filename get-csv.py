import argparse
from datetime import datetime, timezone
import gzip
import requests


parser = argparse.ArgumentParser(description="Arguments")
parser.add_argument('--init', action='store_true', help="Create/Recreate DB table")
parser.add_argument('-g', type=int, nargs='+', default=None, help="Gateway ID")
parser.add_argument('-c', type=int, default=3600*24*3, help="Export with txn_created_at last N seconds (default: 3 days)")
parser.add_argument('-u', type=int, default=90, help="Export with txn_updated_at last N seconds (default: 90 sec)")
args = parser.parse_args()

PSP_EXPORT_1C_BASE_URL = "https://xxxxxxxxx/api"

param_list = [
            # ('2023-01-01 00:00:00', '2023-01-08 00:00:00'),
            # ('2023-01-08 00:00:00', '2023-01-15 00:00:00'),
            # ('2023-01-15 00:00:00', '2023-01-22 00:00:00'),
            # ('2023-01-22 00:00:00', '2023-01-29 00:00:00'),
            # ('2023-01-29 00:00:00', '2023-02-05 00:00:00'),
            # ('2023-02-05 00:00:00', '2023-02-12 00:00:00'),
            # ('2023-02-12 00:00:00', '2023-02-19 00:00:00'),
            # ('2023-02-19 00:00:00', '2023-02-26 00:00:00'),
            # ('2023-02-26 00:00:00', '2023-03-05 00:00:00'),
            # ('2023-03-05 00:00:00', '2023-03-12 00:00:00'),
            # ('2023-03-12 00:00:00', '2023-03-19 00:00:00'),
            # ('2023-03-19 00:00:00', '2023-03-26 00:00:00'),
            # ('2023-03-26 00:00:00', '2023-04-02 00:00:00'),
            # ('2023-04-02 00:00:00', '2023-04-09 00:00:00'),
            # ('2023-04-09 00:00:00', '2023-04-16 00:00:00'),
            # ('2023-04-16 00:00:00', '2023-04-23 00:00:00'),
            # ('2023-04-23 00:00:00', '2023-04-30 00:00:00'),
            # ('2023-04-30 00:00:00', '2023-05-07 00:00:00'),
            # ('2023-05-07 00:00:00', '2023-05-14 00:00:00'),
            # ('2023-05-14 00:00:00', '2023-05-21 00:00:00'),
            # ('2023-05-21 00:00:00', '2023-05-28 00:00:00'),
            # ('2023-05-28 00:00:00', '2023-06-04 00:00:00'),
            # ('2023-06-04 00:00:00', '2023-06-11 00:00:00'),
            # ('2023-06-11 00:00:00', '2023-06-18 00:00:00'),
            # ('2023-06-18 00:00:00', '2023-06-25 00:00:00'),
            # ('2023-06-25 00:00:00', '2023-07-02 00:00:00'),
            # ('2023-07-02 00:00:00', '2023-07-09 00:00:00'),
            # ('2023-07-09 00:00:00', '2023-07-16 00:00:00'),
            # ('2023-07-16 00:00:00', '2023-07-23 00:00:00'),
            # ('2023-07-23 00:00:00', '2023-07-30 00:00:00'),
            # ('2023-07-30 00:00:00', '2023-08-06 00:00:00'),
            # ('2023-08-06 00:00:00', '2023-08-13 00:00:00'),
            # ('2023-08-13 00:00:00', '2023-08-20 00:00:00'),
            # ('2023-08-20 00:00:00', '2023-08-27 00:00:00'),
            # ('2023-08-27 00:00:00', '2023-09-03 00:00:00'),
            # ('2023-09-03 00:00:00', '2023-09-10 00:00:00'),
            # ('2023-09-10 00:00:00', '2023-09-17 00:00:00'),
            # ('2023-09-17 00:00:00', '2023-09-24 00:00:00'),
            # ('2023-09-24 00:00:00', '2023-10-01 00:00:00'),
            # ('2023-10-01 00:00:00', '2023-10-08 00:00:00'),
            # ('2023-10-08 00:00:00', '2023-10-15 00:00:00'),
            # ('2023-10-15 00:00:00', '2023-10-22 00:00:00'),
            # ('2023-10-22 00:00:00', '2023-10-29 00:00:00'),
            # ('2023-10-29 00:00:00', '2023-11-05 00:00:00'),
            # ('2023-11-05 00:00:00', '2023-11-12 00:00:00'),
            # ('2023-11-12 00:00:00', '2023-11-19 00:00:00'),
            # ('2023-11-19 00:00:00', '2023-11-26 00:00:00'),
            # ('2023-11-26 00:00:00', '2023-12-03 00:00:00'),
            # ('2023-12-03 00:00:00', '2023-12-10 00:00:00'),
            # ('2023-12-10 00:00:00', '2023-12-17 00:00:00'),
            # ('2023-12-17 00:00:00', '2023-12-24 00:00:00'),
            # ('2023-12-24 00:00:00', '2023-12-31 00:00:00'),
            # ('2023-12-31 00:00:00', '2024-01-07 00:00:00'),
            # ('2024-01-07 00:00:00', '2024-01-14 00:00:00'),
            # ('2024-01-14 00:00:00', '2024-01-21 00:00:00'),
            # ('2024-01-21 00:00:00', '2024-01-28 00:00:00'),
            # ('2024-01-28 00:00:00', '2024-02-04 00:00:00'),
            # ('2024-02-04 00:00:00', '2024-02-11 00:00:00'),
            # ('2024-02-11 00:00:00', '2024-02-18 00:00:00'),
            # ('2024-02-18 00:00:00', '2024-02-25 00:00:00'),
            # ('2024-02-25 00:00:00', '2024-03-03 00:00:00'),
            # ('2024-03-03 00:00:00', '2024-03-10 00:00:00'),
            # ('2024-03-10 00:00:00', '2024-03-17 00:00:00'),
            # ('2024-03-17 00:00:00', '2024-03-24 00:00:00'),
            # ('2024-03-24 00:00:00', '2024-03-31 00:00:00'),
            # ('2024-03-31 00:00:00', '2024-04-07 00:00:00'),
            # ('2024-04-07 00:00:00', '2024-04-14 00:00:00'),
            # ('2024-04-14 00:00:00', '2024-04-21 00:00:00'),
            # ('2024-04-21 00:00:00', '2024-04-28 00:00:00'),
            # ('2024-04-28 00:00:00', '2024-05-05 00:00:00'),
            # ('2024-05-05 00:00:00', '2024-05-12 00:00:00'),
            # ('2024-05-12 00:00:00', '2024-05-19 00:00:00'),
            # ('2024-05-19 00:00:00', '2024-05-26 00:00:00'),
            # ('2024-05-26 00:00:00', '2024-06-02 00:00:00'),
            # ('2024-06-02 00:00:00', '2024-06-09 00:00:00'),
            # ('2024-06-09 00:00:00', '2024-06-16 00:00:00'),
            # ('2024-06-16 00:00:00', '2024-06-23 00:00:00'),
            # ('2024-06-23 00:00:00', '2024-06-30 00:00:00'),
            # ('2024-06-30 00:00:00', '2024-07-07 00:00:00'),
            # ('2024-07-07 00:00:00', '2024-07-14 00:00:00'),
            # ('2024-07-14 00:00:00', '2024-07-21 00:00:00'),
            # ('2024-07-21 00:00:00', '2024-07-28 00:00:00'),
            # ('2024-07-28 00:00:00', '2024-08-04 00:00:00'),
            # ('2024-08-04 00:00:00', '2024-08-11 00:00:00'),
            # ('2024-08-11 00:00:00', '2024-08-18 00:00:00'),
            # ('2024-08-18 00:00:00', '2024-08-25 00:00:00'),
            # ('2024-08-25 00:00:00', '2024-09-01 00:00:00'),
            # ('2024-09-01 00:00:00', '2024-09-08 00:00:00'),
            # ('2024-09-08 00:00:00', '2024-09-15 00:00:00'),
            # ('2024-09-15 00:00:00', '2024-09-22 00:00:00'),
            # ('2024-09-22 00:00:00', '2024-09-29 00:00:00'),
            # ('2024-09-29 00:00:00', '2024-10-06 00:00:00'),
            # ('2024-10-06 00:00:00', '2024-10-13 00:00:00'),
            # ('2024-10-13 00:00:00', '2024-10-20 00:00:00'),
            # ('2024-10-20 00:00:00', '2024-10-25 11:05:00'),
            # ('2024-10-23 10:14:00', '2024-10-25 00:00:00'),
            # ('2024-11-03 00:00:00', '2024-11-10 00:00:00'),
            # ('2024-11-10 00:00:00', '2024-11-17 00:00:00'),
            ('2024-10-25 11:03:54', '2024-10-25 14:20:54')
]
chn_list = [118, 144, 146, 147, 148, 149, 150, 170, 188, 199, 212, 276, 277, 278, 303, 304, 305, 324, 403, 405, 409, 410, 413, 414]

count1 = 0
now = datetime.now(timezone.utc)
for i in param_list:
    count1 += 1
    requests.packages.urllib3.disable_warnings()
    date_from = i[0]
    updated_from = i[0]
    date_to = i[1]
    updated_to = i[1]
    params = {
        "format": "csv",
        "compression": "gzip",
        "txn_cms_created_at": "any",
        "chn_id": chn_list,
        "date_from": date_from,
        "updated_from": updated_from,
        "date_to": updated_to,
        "updated_to": updated_to
    }
    response = requests.get(PSP_EXPORT_1C_BASE_URL, params=params, verify=False)
    # response_url = response.url
    # print(response_url)
    name_csv_gzip = str(count1) + '.csv.gz'
    name_csv = str(count1) + '.csv'

    with gzip.open(name_csv_gzip, 'wb') as f:
        f.write(response.content)
    with gzip.open(name_csv_gzip, 'rb') as file:
        file_content = file.read()
        file_content2 = gzip.decompress(file_content)
        file_content_str = file_content2.decode('utf-8')
    with open(name_csv, 'w', encoding='utf-8') as f:
        f.write(file_content_str)
    print(f"Файл записан: {name_csv}")






